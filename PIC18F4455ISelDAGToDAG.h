//=-- PIC18F4455ISelDAGToDAG.cpp - A dag to dag inst selector for PIC18F4455 ------=//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source 
// License. See LICENSE.TXT for details.
//
//=----------------------------------------------------------------=//
//
// This file defines an instruction selector for the PIC18F4455 target.
//
//=----------------------------------------------------------------=//

#define DEBUG_TYPE "pic18f4455-isel"

#include "PIC18F4455.h"
#include "PIC18F4455RegisterInfo.h"
#include "PIC18F4455TargetMachine.h"
#include "PIC18F4455MachineFunctionInfo.h"
#include "llvm/CodeGen/SelectionDAGISel.h"
#include "llvm/Support/Compiler.h"
#include "llvm/Support/raw_ostream.h"
#include "llvm/Support/Debug.h"
#include "llvm/Intrinsics.h"
using namespace llvm;

namespace {

class LLVM_LIBRARY_VISIBILITY PIC18F4455DAGToDAGISel :
public SelectionDAGISel {

  /// TM - Keep a reference to PIC18F4455TargetMachine.
  const PIC18F4455TargetMachine &TM;

  /// PIC18F4455Lowering - This object fully describes how to lower LLVM
  //     code to an PIC18F4455-specific SelectionDAG.
  const PIC18F4455TargetLowering &PIC18F4455Lowering;

public:
  explicit PIC18F4455DAGToDAGISel(PIC18F4455TargetMachine &tm) : 
        SelectionDAGISel(tm),
        TM(tm), PIC18F4455Lowering(*TM.getTargetLowering()) {}
  
  // Pass Name
  virtual const char *getPassName() const {
    return "PIC18F4455 DAG->DAG Pattern Instruction Selection";
  } 

private:
  // Include the pieces autogenerated from the target description.
#include "PIC18F4455GenDAGISel.inc"

  SDNode *Select(SDNode *N);

  // Match direct address complex pattern.
  bool SelectDirectAddr(SDNode *Op, SDValue N, SDValue &Address);

};

}

